apiVersion: batch/v1
kind: CronJob
metadata:
  name: tkg-db-backup
  namespace: kube-system
spec:
  schedule: "*/15 * * * *" # Every 15 minutes
  successfulJobsHistoryLimit: 0 # No job retention
  failedJobsHistoryLimit: 0 # No job retention
  jobTemplate:
    metadata:
      name: tkg-db-backup
    spec:
      template:
        metadata:
        spec:
          containers:
          - name: backup
            image: polinux/stress:1.0.4
            command:
            # Usage: stress [OPTION [ARG]] ...
            #   -?, --help         show this help statement
            #       --version      show version statement
            #   -v, --verbose      be verbose
            #   -q, --quiet        be quiet
            #   -n, --dry-run      show what would have been done
            #   -t, --timeout N    timeout after N seconds
            #       --backoff N    wait factor of N microseconds before work starts
            #   -c, --cpu N        spawn N workers spinning on sqrt()
            #   -i, --io N         spawn N workers spinning on sync()
            #   -m, --vm N         spawn N workers spinning on malloc()/free()
            #       --vm-bytes B   malloc B bytes per vm worker (default is 256MB)
            #       --vm-stride B  touch a byte every B bytes (default is 4096)
            #       --vm-hang N    sleep N secs before free (default none, 0 is inf)
            #       --vm-keep      redirty memory instead of freeing and reallocating
            #   -d, --hdd N        spawn N workers spinning on write()/unlink()
            #       --hdd-bytes B  write B bytes per hdd worker (default is 1GB)
            #   Example: stress --cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 10s
            #   Note: Numbers may be suffixed with s,m,h,d,y (time) or B,K,M,G (size).
              - stress
              - --cpu
              - "16"
              - --vm
              - "8"
              - --io
              - "8"
              - --hdd
              - "8"
              - --timeout
              - 5m
          restartPolicy: OnFailure